---
category: algorithm
tags: Boyer-Moore, Majority Element
---
# Boyer-Moore Voting Algorithm
### Goal 
Find a candidate that appears more than ⌊ n/2 ⌋ times. Find one, not find all.
### Code
```python
        candidate = 0
        count = 0
        for x in nums:
            if count == 0:
                candidate = x
                count = 1
            else:
                if x==candidate:
                    count += 1
                else:
                    count -= 1
        if count > 0:
            return candidate
        else:
            return -1
```
### Main Idea
If the candidate is not the majority, the count should be subtracted to 0. It is a good time to choose next candidate, though the previous candidate can be candidate a again in the future.
### Thinking Expansion
The array or the list can be divided to several parts.       
The array is [1,1,0,1,1,0,1,0,0].     
We devide it into two parts:      
[1,1,0,1,1] –> (candidate,count)=(1,3)       
[0,1,0,0] –> (candidate,count)=(0,2)            
Based on (1,3) and (0,2)，we get the majority element 1.
